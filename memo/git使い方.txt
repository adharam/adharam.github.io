
git config --global user.name "adharam"
git config --global user.email "ito.yuto@gmail.com"
git init
git remote add origin "https://github.com/adharam/adharam.github.io"
git push origin master

◾️リポジトリをダウンロードしてきてローカルで編集してpushしたい時
git clone https://github.com/adharam/adharam.github.io
git branch --set-upstream-to=origin/master master
次回から git push とだけ入力しても、origin master が自動的に使われるようになります。
git add . && git commit -m "修正" && git push
でいける

◾️競合が起きているときに無理やりpushする
git push --force origin master
git push --force 


■消す時
1. ローカルファイルを削除

1
$ git rm ファイル名
※ただしこれだと、ワーキングエリアからも削除されてしまう。
ワーキングエリアには残しておき、Git管理対象外としたい場合は、.gitignoreに追記し

1
$ git rm --cached ファイル名
2. ステージング

1
$ git add .
3. コミット

1
$ git commit -m "メッセージ"
4. プッシュ

1
$ git push

#################################################
ローカルの更新をリポジトリに反映させる
git add . && git commit -m "修正" && git push

#################################################
git push の逆でリポジトリの更新をローカルに反映させる
git pull




ローカルブランチでの更新内容が正しく、リモートに反映させたい場合
git pull origin ブランチ名
自分の更新内容は間違っているため、リモートのブランチに強制的に合わせたい場合
git reset --hard origin/ブランチ名
現在のブランチを調べたい場合は、
git branch